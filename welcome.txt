Thanks for installing LineProfiler!
Here's what you need to get started:

First, install `line_profiler` and `kernprof.py`.
The easiest way to install these is

    pip install --pre line_profiler

Next, give it a test!
Add the `@profile` annotation to any functions you'd like to profile.
Then, run the plugin via the available bindings:
 * ctrl-alt-shift-p
 * right-click > "Run line_profiler"
 * Tools > Packages > "Run line_profiler"

If successful, a scratch buffer will appear with your results.
If not, check the console (ctrl-`) to see any error messages.
Most errors occur when the default settings aren't correct for your setup.

If needed, update LineProfiler's settings.
(Preferences > Package Settings > LineProfiler > "Settings - User")

Available preferences are:
 
 * `python`: path to the Python binary you want to profile with.
   (Try using the result of `which python` if you're not sure.)

 * `kernprof`: path to `kerprof.py` (comes with the `line_profiler` module)
   (Try `which kernprof.py` if you're not sure.)

 * `pythonpath`: (Optional) colon-separated list of paths to prepend to the default PYTHONPATH.

 * `poll_timeout_seconds`: (Optional) seconds to wait before killing the profiler.
   If you're profiling code that runs for longer than a minute,
   increase this value. (Default: 60)

 * `poll_sleep_seconds`: (Optional) seconds to sleep before polling the profiler for results.
   If you find the delay in getting profiler results too long,
   decrease this value. (Default: 1)


